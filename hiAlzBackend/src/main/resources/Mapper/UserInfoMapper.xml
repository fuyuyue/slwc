<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slwc.dao.UserInfoMapper">
    <resultMap id="UserResultMap" type="com.slwc.vo.UserInfoVo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="userName" jdbcType="VARCHAR" property="user_name" />
        <result column="pwd" jdbcType="VARCHAR" property="pwd" />
        <result column="role" jdbcType="VARCHAR" property="role" />
        <result column="roleManager" jdbcType="VARCHAR" property="role_manager" />
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, user_name, pwd, role, role_manager
    </sql>

    <select id="existUser" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*) FROM helloAlz.userinfo where user_name=#{0};
    </select>

    <select id="verifyPwd" resultType="java.lang.String">
        SELECT pwd FROM helloAlz.userinfo where user_name=#{0};
    </select>

    <select id="getRegisterList" resultType="com.slwc.vo.UserInfoVo">
        SELECT user_name as userName, real_name as realName, role_manager as roleManager,
        id, role, status, mail, phone
        FROM helloAlz.userinfo;
    </select>

    <insert id="addUser" parameterType="com.slwc.vo.UserInfoVo">
        insert into helloAlz.userinfo (id, user_name, pwd, role, role_manager, status, real_name, mail, phone)
        values (#{id}, #{userName}, #{pwd}, #{role}, #{roleManager}, #{status}, #{realName}, #{mail}, #{phone});
    </insert>

    <select id="getUserByName" resultType="com.slwc.entity.UserInfoEntity">
        SELECT user_name as userName, real_name as realName, role_manager as roleManager,
        id, role, status, mail, phone
        FROM helloAlz.userinfo where user_name=#{0};
    </select>

    <update id="approve" parameterType="java.lang.String">
        update helloAlz.userinfo set status="Approved" where id=#{id}
    </update>

    <update id="setRoleManager" parameterType="java.lang.String">
        update helloAlz.userinfo set role_manager="Y" where id=#{id}
    </update>

    <update id="setNotRoleManager">
        update helloAlz.userinfo set role_manager="N" where role_manager="Y" and id!=1;
    </update>

    <delete id="deleteById" parameterType="java.lang.String">
        delete from helloAlz.userinfo where id=#{id}
    </delete>

    <update id="updatePwd" parameterType="java.lang.String">
        update helloAlz.userinfo set pwd=#{0} where user_name=#{1}
    </update>
</mapper>